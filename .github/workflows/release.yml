name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Grant write permissions for GITHUB_TOKEN to create releases and upload assets
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.x'

    - name: Download Go Modules
      run: |
        go mod tidy
        go mod download

    - name: Get current date and commit hash for versioning
      id: version_info
      run: |
        echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set TAG_NAME
      run: echo "TAG_NAME=v${{ env.DATE }}-${{ env.COMMIT }}" >> $GITHUB_ENV

    - name: Build for Linux
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.toolVersion=${{ env.TAG_NAME }}" -o dab-downloader-linux-amd64
    - name: Build for Windows
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.toolVersion=${{ env.TAG_NAME }}" -o dab-downloader-windows-amd64.exe
    - name: Build for macOS
      run: |
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.toolVersion=${{ env.TAG_NAME }}" -o dab-downloader-macos-amd64

    - name: Create and Push Git Tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag ${{ env.TAG_NAME }}
        git push origin ${{ env.TAG_NAME }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
        files: |
          ./dab-downloader-linux-amd64
          ./dab-downloader-windows-amd64.exe
          ./dab-downloader-macos-amd64

    - name: Verify Release Creation
      run: |
        gh auth setup-git
        gh release list
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
